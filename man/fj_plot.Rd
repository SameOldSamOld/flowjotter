% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fj_plot.R
\name{fj_plot}
\alias{fj_plot}
\title{Flowjotter custom plots for Number, Percentage, MFI cytometry plots.}
\usage{
fj_plot(
  tempData = NULL,
  jitter_width = 0.1,
  jotter = TRUE,
  colours = "Set1",
  font.size = 18,
  pt.size = 3,
  plot.bar = FALSE,
  plot.boxplot = FALSE,
  plot.mean = FALSE,
  plot.se.of.mean = FALSE,
  axis.text.x = 45,
  chosen.theme = "bw"
)
}
\arguments{
\item{tempData}{Two column dataframe. First column class factor "Samples", second column
is the name of the plot with datapoints to be plotted. The first letter of the
second column will dictate the type of plot. "N" for number, "\%" for Percentage,
"M" for MFI.}

\item{jitter_width}{Amount of horizontal jitter for plotted points. From 0 - 1.}

\item{jotter}{logical. if TRUE plot should include points}

\item{colours}{Any value of "Black & White", or colour palette returned from
RColorBrewer::display.brewer.all(), such as "Set1", "PuRd", "Pastel2", etc.}

\item{font.size}{Plot title font size. Y axis title will be 3/4 of this value.
x axis labels will be 1/2 of this value.}

\item{pt.size}{Integer value choosing point size.}

\item{plot.bar}{logical. if TRUE boxlot will be added to plot.}

\item{plot.boxplot}{logical. if TRUE boxplot will be added to plot.}

\item{plot.mean}{logical. if TRUE horizontal line indicating mean will be plotted.}

\item{plot.se.of.mean}{logical. if TRUE standard error of the mean be plotted.}

\item{axis.text.x}{Angle of labels on x axis. Integer value wrapping around 360 degrees.}

\item{chosen.theme}{One value from "bw", "void", "light", "dark", "minimal", "classic".}
}
\description{
Generate a single ggplot2 images from a 2 column dataframe. Samples, and
a second column that will be used as the title of graph, and graph class.
}
\examples{
# Load flowjotter's example dataset that is loaded in app by default
data(flowjotter_example)

# Ensure the first columns is titled "Samples"
flowjotter_example <- dplyr::rename(flowjotter_example, `Samples` = 1)

# Remove empty columns
flowjotter_example <- dplyr::select(flowjotter_example, dplyr::where(~ !all(is.na(.x))))

# Use check_plotrow to filter on last row.
flowjotter_example <- check_plotrow(xs = flowjotter_example, sheet = "CD4")

# Use clean_input_data to prepare for plotting, and grouping samples.
flowjotter_example <- clean_input_data(flowjotter_example)

# Plot data
fj_plot(flowjotter_example[,1:2])
}
